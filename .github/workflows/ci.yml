name: CI

on:
  push:
    branches: ["main", "staging", "production"]
  pull_request:
    branches: ["main"]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: magsuite
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json
      - name: Install dependencies
        run: |
          npm install --prefix backend
          npm install --prefix frontend
      - name: Lint backend
        run: npm run lint --prefix backend
      - name: Lint frontend
        run: npm run lint --prefix frontend
      - name: Test backend
        run: npm test --prefix backend
      - name: Test frontend
        run: npm test --prefix frontend

  deploy:
    needs: lint-and-test
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push backend
        run: |
          docker build -t ghcr.io/${{ github.repository }}/backend:${{ github.ref_name }} backend
          docker push ghcr.io/${{ github.repository }}/backend:${{ github.ref_name }}
      - name: Build and push frontend
        run: |
          docker build -t ghcr.io/${{ github.repository }}/frontend:${{ github.ref_name }} frontend
          docker push ghcr.io/${{ github.repository }}/frontend:${{ github.ref_name }}
